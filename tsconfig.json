{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Basic Options */
    "target": "es6",
    // "incremental": true                   /* Enable incremental compilation */
    // "lib": []                             /* Specify library files to be included in the compilation. */
    // "allowJs": true, /* Allow javascript files to be compiled. */
    // "checkJs": true                       /* Report errors in .js files. */
    "sourceMap": true /* Generates corresponding '.map' file. */,
    // "composite": true                     /* Enable project compilation */
    // "tsBuildInfoFile": "./"            /* Specify file to store incremental compilation information */
    "resolveJsonModule": true,
    "removeComments": true /* Do not emit comments to output. */,
    // "importHelpers": true                 /* Import emit helpers from 'tslib'. */
    "downlevelIteration": true /* Provide full support for iterables in 'for-of' spread and destructuring when targeting 'ES5' or 'ES3'. */,
    // "isolatedModules": true               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* Enable strict null checks. */,
    "strictFunctionTypes": true /* Enable strict checking of function types. */,
    "strictBindCallApply": true /* Enable strict 'bind' 'call' and 'apply' methods on functions. */,
    "strictPropertyInitialization": true /* Enable strict checking of property initialization in classes. */,
    "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
    "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,

    /* Additional Checks */
    // "noUnusedLocals": true                /* Report errors on unused locals. */
    // "noUnusedParameters": true            /* Report errors on unused parameters. */
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,

    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    // "baseUrl": "./src" /* Base directory to resolve non-absolute module names. */,
    "outDir": "./app",
    // "paths": {}                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit just typechecking. */,
    "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

    /* Source Map Options */
    // "sourceRoot": ""                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": ""                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Advanced Options */
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
  },
  "include": ["./src/**/*"]
}
